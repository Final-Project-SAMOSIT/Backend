generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model news_contents {
  news_id                              String       @id @default(uuid()) @db.VarChar(40)
  news_title                           String       @db.VarChar(100)
  news_details                         String       @db.VarChar(5000)
  news_created_at                      DateTime     @db.Date
  news_updated_at                      DateTime     @db.Date
  news_img                             String       @db.VarChar(250)
  news_caption_img                     String?      @db.VarChar(100)
  union_year                           Int
  news_type_id                         String       @db.VarChar(10)
  user_id                              String       @db.VarChar(20)
  news_types                           news_types   @relation(fields: [news_type_id], references: [news_type_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_news_contents_news_types1")
  union_year_news_contentsTounion_year union_year   @relation(fields: [union_year], references: [union_year], onDelete: NoAction, onUpdate: NoAction, map: "fk_news_contents_union_year1")
  user_details                         user_details @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_news_contents_user_details1")

  @@index([news_type_id], map: "fk_news_contents_news_types1_idx")
  @@index([union_year], map: "fk_news_contents_union_year1_idx")
  @@index([user_id], map: "fk_news_contents_user_details1_idx")
}

model news_types {
  news_type_id   String          @id @db.VarChar(10)
  news_type_name String          @db.VarChar(20)
  news_contents  news_contents[]
}

model petition {
  petition_id      String         @id @default(uuid()) @db.VarChar(40)
  petition_topic   String         @db.VarChar(100)
  petition_details String         @db.VarChar(500)
  petition_date    DateTime       @db.Date
  user_id          String         @db.VarChar(20)
  petition_type_id String         @db.VarChar(10)
  status_id        String         @db.VarChar(10)
  status           status         @relation(fields: [status_id], references: [status_id], onDelete: NoAction, onUpdate: NoAction, map: "petition_status_fk")
  petition_types   petition_types @relation(fields: [petition_type_id], references: [petition_type_id], onDelete: NoAction, onUpdate: NoAction, map: "petition_types_fk")
  user_details     user_details   @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "petition_user_details_fk")

  @@index([status_id], map: "petition_status_fk")
  @@index([petition_type_id], map: "petition_types_fk")
  @@index([user_id], map: "petition_user_details_fk")
}

model petition_types {
  petition_type_id   String     @id @db.VarChar(10)
  petition_type_name String     @db.VarChar(100)
  petition           petition[]
}

model roles {
  role_id      String         @id @db.VarChar(10)
  role_name    String         @db.VarChar(20)
  user_details user_details[]
}

model status {
  status_id          String     @id @db.VarChar(10)
  status_name        String     @db.VarChar(50)
  status_description String?    @db.VarChar(100)
  petition           petition[]
}

model std_position {
  position_id   String          @id @db.VarChar(10)
  position_name String          @db.VarChar(50)
  student_union student_union[]
}

model student_union {
  union_id                             String             @id @default(uuid()) @db.VarChar(40)
  std_id                               String             @db.VarChar(20)
  union_year                           Int
  position_id                          String             @db.VarChar(10)
  student_union_info                   student_union_info @relation(fields: [std_id], references: [std_id], onDelete: NoAction, onUpdate: NoAction, map: "student_union_info_fk")
  std_position                         std_position       @relation(fields: [position_id], references: [position_id], onDelete: NoAction, onUpdate: NoAction, map: "student_union_position_fk")
  union_year_student_unionTounion_year union_year         @relation(fields: [union_year], references: [union_year], onDelete: NoAction, onUpdate: NoAction, map: "student_union_year_fk")

  @@index([std_id], map: "student_union_info_fk")
  @@index([position_id], map: "student_union_position_fk")
  @@index([union_year], map: "student_union_year_fk")
}

model student_union_info {
  std_id        String          @id @db.VarChar(20)
  std_fname_th  String          @db.VarChar(50)
  std_lname_th  String          @db.VarChar(50)
  std_fname_en  String          @db.VarChar(50)
  std_lname_en  String          @db.VarChar(50)
  std_major     STUDENT_MAJOR
  std_img       String          @db.VarChar(250)
  student_union student_union[]
}

enum STUDENT_MAJOR {
  IT
  CS
  DSI
}

model union_year {
  union_year    Int             @id
  news_contents news_contents[]
  student_union student_union[]
}

model user_details {
  user_id       String          @id @db.VarChar(20)
  user_type     String?         @db.VarChar(20)
  name_th       String?         @db.VarChar(50)
  name_en       String?         @db.VarChar(50)
  email         String?         @db.VarChar(50)
  role_id       String          @db.VarChar(10)
  roles         roles           @relation(fields: [role_id], references: [role_id], onDelete: NoAction, onUpdate: NoAction, map: "user_details_roles_fk")
  news_contents news_contents[]
  petition      petition[]

  @@index([role_id], map: "user_details_roles_fk")
}
